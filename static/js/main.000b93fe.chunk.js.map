{"version":3,"sources":["api/goods.ts","GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","GoodsList","_ref","goods","_jsx","children","map","good","colorClass","color","className","name","id","App","setGoods","useState","_jsxs","onClick","loadGoods","type","loadFiveFirstGoods","sort","a","b","localeCompare","slice","loadRedGoods","filter","ReactDOM","render","document","getElementById"],"mappings":"wLAKO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAKC,GAAYA,EAASC,QAC/B,C,WCDO,MAAMC,EAA6BC,IAAgB,IAAf,MAAEC,GAAOD,EAClD,OACEE,cAAA,MAAAC,SACGF,EAAMG,KAAIC,IACT,IAAIC,EAAa,GAEjB,OAAQD,EAAKE,OACX,IAAK,MACHD,EAAa,MACb,MACF,IAAK,QACHA,EAAa,QACb,MACF,IAAK,OACHA,EAAa,OACb,MACF,QACEA,EAAa,GAGjB,OACEJ,cAAA,MAEE,UAAQ,OACRM,UAAWF,EAAWH,SAErBE,EAAKI,MAJDJ,EAAKK,GAKP,KAGN,EC/BIC,EAAgBA,KAC3B,MAAOV,EAAOW,GAAYC,mBAAiB,IAc3C,OACEC,eAAA,OAAKN,UAAU,MAAKL,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEa,QAjBYC,KAChBtB,IAASE,KAAKgB,EAAS,EAiBnBK,KAAK,SACL,UAAQ,aAAYd,SACrB,mBAIDD,cAAA,UACEa,QArBqBG,KFFpBxB,IACJE,MAAKK,GAASA,EACZkB,MAAK,CAACC,EAAGC,IAAMD,EAAEX,KAAKa,cAAcD,EAAEZ,QACtCc,MAAM,EAAG,KEAA3B,KAAKgB,EAAS,EAqBtBK,KAAK,SACL,UAAQ,oBAAmBd,SAC5B,uBAIDD,cAAA,UACEa,QAzBeS,KFCd9B,IACJE,MAAKK,GAASA,EAAMwB,QAAOpB,GAAuB,QAAfA,EAAKE,UED3BX,KAAKgB,EAAS,EAyBxBK,KAAK,SACL,UAAQ,aAAYd,SACrB,mBAIDD,cAACH,EAAS,CACRE,MAAOA,MAEL,ECjDVyB,IAASC,OACPzB,cAACS,EAAG,IACJiB,SAASC,eAAe,Q","file":"static/js/main.000b93fe.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => {\n        let colorClass = '';\n\n        switch (good.color) {\n          case 'red':\n            colorClass = 'red';\n            break;\n          case 'green':\n            colorClass = 'green';\n            break;\n          case 'blue':\n            colorClass = 'blue';\n            break;\n          default:\n            colorClass = '';\n        }\n\n        return (\n          <li\n            key={good.id}\n            data-cy=\"good\"\n            className={colorClass}\n          >\n            {good.name}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const loadGoods = () => {\n    getAll().then(setGoods);\n  };\n\n  const loadFiveFirstGoods = () => {\n    get5First().then(setGoods);\n  };\n\n  const loadRedGoods = () => {\n    getRedGoods().then(setGoods);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        onClick={loadGoods}\n        type=\"button\"\n        data-cy=\"all-button\"\n      >\n        Load all goods\n      </button>\n\n      <button\n        onClick={loadFiveFirstGoods}\n        type=\"button\"\n        data-cy=\"first-five-button\"\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        onClick={loadRedGoods}\n        type=\"button\"\n        data-cy=\"red-button\"\n      >\n        Load red goods\n      </button>\n\n      <GoodsList\n        goods={goods}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}